<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;
{% if authenticatable %}
use Illuminate\Support\Facades\Hash;
{% endif %}
{% for belongsToEntity in entity.belongsToEntities %}
use App\Models\{{ belongsToEntity.modelName }};
{% endfor %}

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\{{ modelName }}>
 */
class {{ factoryName }} extends Factory
{
    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
{% for belongsTo in entity.belongsToEntities %}
            '{{ belongsTo.name }}_id' => {{ belongsTo.modelName }}::factory()->create()->id,
{% endfor %}
{% for faker in fakers|filter(faker => faker.type is not same as('foreignId')) %}
{% if faker.type is same as('password') %}
            '{{ faker.name }}' => Hash::make('password'),
{% else %}
            '{{ faker.name }}' => $this->faker->{{ faker.type }}({{ faker.size }}),
{% endif %}
{% endfor %}
        ];
    }
}
