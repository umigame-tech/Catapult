<?php

namespace App\Http\Controllers\Api;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Http\Requests\Api\{{ storeRequestName }};
use App\Http\Requests\Api\{{ updateRequestName }};
use App\Models\{{ modelName }};
use App\Http\Resources\{{ resourceName }};
use App\Http\Resources\{{ resourceCollectionName }};
{% for dependentEntity in entity.dependentEntities %}
use App\Models\{{ dependentEntity.modelName }};
{% endfor %}

class {{ controllerName }} extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        return new {{ resourceCollectionName }}({{ modelName }}::all());
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store({{ storeRequestName }} $request)
    {
        return new {{ resourceName }}({{ modelName }}::create($request->all()));
    }

    /**
     * Display the specified resource.
     */
    public function show(string $id)
    {
        return new {{ resourceName }}({{ modelName }}::findOrFail($id));
    }

    /**
     * Update the specified resource in storage.
     */
    public function update({{ updateRequestName }} $request, string $id)
    {
        ${{ entity.name }} = {{ modelName }}::findOrFail($id);
        ${{ entity.name }}->update($request->all());
        return new {{ resourceName }}(${{ entity.name }});
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(string $id)
    {
        return {{ modelName }}::destroy($id);
    }

{% for action in subActions %}
{% if action.actionMethodName ends with 'index' %}
    public function {{action.actionMethodName}}({{ action.argString }})
    {
        return new {{ resourceCollectionName }}(
{% for related in action.entities|filter(v => v.name is not same as(entity.name)) %}
    {% if loop.index is same as 1 %}
        {{ modelName }}::of{{ related.modelName }}(${{ related.name }})
    {% else %}
            ->of{{ related.modelName }}(${{ related.name }})
    {% endif %}
{% endfor %}
            ->get()
        );
    }
{% endif %}
{% endfor %}
}
